{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AuthContent from \"../components/Auth/AuthContent\";\nimport LoadingOverlay from \"../components/ui/LoadingOverlay\";\nimport { AuthContext } from \"../context/auth-context\";\nimport { loginUser } from \"../utils/auth\";\nimport { capitalize } from \"../utils/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction LoginScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setAuthenticated = _useState2[1];\n\n  var loginHandler = function () {\n    var _ref = _asyncToGenerator(function* (user) {\n      console.log('ðŸš€ ~ file: LoginScreen.js ~ line 14 ~ loginHandler ~ user', user);\n      setAuthenticated(false);\n      try {\n        console.log(user);\n        var res = yield loginUser(user);\n        setAuthenticated(true);\n      } catch (error) {\n        setAuthenticated(true);\n        Alert.alert(capitalize(error.message), 'Could not create user. Please try again later.');\n      }\n    });\n    return function loginHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (!isAuthenticated) return _jsx(LoadingOverlay, {\n    message: \"Logging you in...\"\n  });\n  return _jsx(AuthContent, {\n    isLogin: true,\n    onAuthenticate: loginHandler\n  });\n}\nexport default LoginScreen;","map":{"version":3,"names":["useContext","useState","AuthContent","LoadingOverlay","AuthContext","loginUser","capitalize","LoginScreen","isAuthenticated","setAuthenticated","loginHandler","user","console","log","res","error","Alert","alert","message"],"sources":["T:/Online Courses/React Native - The Practical Guide. Maximilian SchwarzmÃ¼ller/authentication/screens/LoginScreen.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { Alert } from 'react-native';\nimport AuthContent from '../components/Auth/AuthContent';\nimport LoadingOverlay from '../components/ui/LoadingOverlay';\nimport { AuthContext } from '../context/auth-context';\nimport { loginUser } from '../utils/auth';\nimport { capitalize } from '../utils/text';\n\nfunction LoginScreen() {\n  const [isAuthenticated, setAuthenticated] = useState(true);\n  // const { authenticate } = useContext(AuthContext);\n\n  const loginHandler = async (user) => {\n    console.log('ðŸš€ ~ file: LoginScreen.js ~ line 14 ~ loginHandler ~ user', user)\n    setAuthenticated(false);\n    try {\n      console.log(user);\n      const res = await loginUser(user);\n      // if (res.data.idToken) {\n      //   // authenticate(res.data.idToken);\n      // } else {\n      //   Alert.alert('Error', 'Something went wrong. Please try again.');\n      // }\n      setAuthenticated(true);\n    } catch (error) {\n      setAuthenticated(true);\n      Alert.alert(\n        capitalize(error.message),\n        'Could not create user. Please try again later.'\n      );\n    }\n  };\n\n  if (!isAuthenticated) return <LoadingOverlay message=\"Logging you in...\" />;\n  return <AuthContent isLogin onAuthenticate={loginHandler} />;\n}\n\nexport default LoginScreen;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE7C,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,SAASC,WAAW;AACpB,SAASC,SAAS;AAClB,SAASC,UAAU;AAAwB;AAE3C,SAASC,WAAW,GAAG;EACrB,gBAA4CN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnDO,eAAe;IAAEC,gBAAgB;;EAGxC,IAAMC,YAAY;IAAA,6BAAG,WAAOC,IAAI,EAAK;MACnCC,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAAEF,IAAI,CAAC;MAC9EF,gBAAgB,CAAC,KAAK,CAAC;MACvB,IAAI;QACFG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAMG,GAAG,SAAST,SAAS,CAACM,IAAI,CAAC;QAMjCF,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdN,gBAAgB,CAAC,IAAI,CAAC;QACtBO,KAAK,CAACC,KAAK,CACTX,UAAU,CAACS,KAAK,CAACG,OAAO,CAAC,EACzB,gDAAgD,CACjD;MACH;IACF,CAAC;IAAA,gBAnBKR,YAAY;MAAA;IAAA;EAAA,GAmBjB;EAED,IAAI,CAACF,eAAe,EAAE,OAAO,KAAC,cAAc;IAAC,OAAO,EAAC;EAAmB,EAAG;EAC3E,OAAO,KAAC,WAAW;IAAC,OAAO;IAAC,cAAc,EAAEE;EAAa,EAAG;AAC9D;AAEA,eAAeH,WAAW"},"metadata":{},"sourceType":"module"}