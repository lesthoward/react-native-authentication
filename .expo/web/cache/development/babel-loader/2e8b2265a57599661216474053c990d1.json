{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignupScreen from \"./screens/SignupScreen\";\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport { Colors } from \"./constants/styles\";\nimport AuthContextProvider, { AuthContext } from \"./context/auth-context\";\nimport { useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTintColor: 'white',\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      },\n      animation: 'none'\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\nfunction AuthenticatedStack() {\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.primary500\n      },\n      headerTintColor: 'white',\n      contentStyle: {\n        backgroundColor: Colors.primary100\n      },\n      animation: 'none'\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Welcome\",\n      component: WelcomeScreen\n    })\n  });\n}\nfunction Navigation() {\n  var _useContext = useContext(AuthContext),\n    isAuthenticated = _useContext.isAuthenticated;\n  var Stack = isAuthenticated ? AuthenticatedStack : AuthStack;\n  return _jsx(NavigationContainer, {\n    children: _jsx(AuthStack, {})\n  });\n}\nexport default function App() {\n  return _jsxs(AuthContextProvider, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Navigation, {})]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","StatusBar","LoginScreen","SignupScreen","WelcomeScreen","Colors","AuthContextProvider","AuthContext","useContext","Stack","AuthStack","headerStyle","backgroundColor","primary500","headerTintColor","contentStyle","primary100","animation","AuthenticatedStack","Navigation","isAuthenticated","App"],"sources":["T:/Online Courses/React Native - The Practical Guide. Maximilian Schwarzm√ºller/authentication/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\n\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport WelcomeScreen from './screens/WelcomeScreen';\nimport { Colors } from './constants/styles';\nimport AuthContextProvider, { AuthContext } from './context/auth-context';\nimport { useContext } from 'react';\n\nconst Stack = createNativeStackNavigator();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary500 },\n        headerTintColor: 'white',\n        contentStyle: { backgroundColor: Colors.primary100 },\n        animation: 'none',\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction AuthenticatedStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.primary500 },\n        headerTintColor: 'white',\n        contentStyle: { backgroundColor: Colors.primary100 },\n        animation: 'none',\n      }}\n    >\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction Navigation() {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const Stack = isAuthenticated ? AuthenticatedStack : AuthStack;\n\n  return (\n    <NavigationContainer>\n      {/* <Stack /> */}\n      <AuthStack />\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n  return (\n    <AuthContextProvider>\n      <StatusBar style=\"light\" />\n\n      <Navigation />\n    </AuthContextProvider>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,aAAa;AACpB,SAASC,MAAM;AACf,OAAOC,mBAAmB,IAAIC,WAAW;AACzC,SAASC,UAAU,QAAQ,OAAO;AAAC;AAAA;AAEnC,IAAMC,KAAK,GAAGT,0BAA0B,EAAE;AAE1C,SAASU,SAAS,GAAG;EACnB,OACE,MAAC,KAAK,CAAC,SAAS;IACd,aAAa,EAAE;MACbC,WAAW,EAAE;QAAEC,eAAe,EAAEP,MAAM,CAACQ;MAAW,CAAC;MACnDC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE;QAAEH,eAAe,EAAEP,MAAM,CAACW;MAAW,CAAC;MACpDC,SAAS,EAAE;IACb,CAAE;IAAA,WAEF,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAC,SAAS,EAAEf;IAAY,EAAG,EACrD,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEC;IAAa,EAAG;EAAA,EACvC;AAEtB;AAEA,SAASe,kBAAkB,GAAG;EAC5B,OACE,KAAC,KAAK,CAAC,SAAS;IACd,aAAa,EAAE;MACbP,WAAW,EAAE;QAAEC,eAAe,EAAEP,MAAM,CAACQ;MAAW,CAAC;MACnDC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE;QAAEH,eAAe,EAAEP,MAAM,CAACW;MAAW,CAAC;MACpDC,SAAS,EAAE;IACb,CAAE;IAAA,UAEF,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEb;IAAc;EAAG,EACzC;AAEtB;AAEA,SAASe,UAAU,GAAG;EACpB,kBAA4BX,UAAU,CAACD,WAAW,CAAC;IAA3Ca,eAAe,eAAfA,eAAe;EAEvB,IAAMX,KAAK,GAAGW,eAAe,GAAGF,kBAAkB,GAAGR,SAAS;EAE9D,OACE,KAAC,mBAAmB;IAAA,UAElB,KAAC,SAAS;EAAG,EACO;AAE1B;AAEA,eAAe,SAASW,GAAG,GAAG;EAC5B,OACE,MAAC,mBAAmB;IAAA,WAClB,KAAC,SAAS;MAAC,KAAK,EAAC;IAAO,EAAG,EAE3B,KAAC,UAAU,KAAG;EAAA,EACM;AAE1B"},"metadata":{},"sourceType":"module"}